"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5683],{8766:(e,a,o)=>{o.r(a),o.d(a,{assets:()=>t,contentTitle:()=>n,default:()=>c,frontMatter:()=>r,metadata:()=>d,toc:()=>m});var s=o(4848),i=o(8453);const r={slug:"observabilidade-de-apis",title:"Observabilidade de APIs",authors:["it0dan"],tags:["APIs","observabilidade","monitoramento","MELT","RED","RUM"]},n="Observabilidade de APIs",d={permalink:"/blog/observabilidade-de-apis",editUrl:"https://github.com/universo01/website/blog/2024-07-20-observabilidade-de-apis.md",source:"@site/blog/2024-07-20-observabilidade-de-apis.md",title:"Observabilidade de APIs",description:"Em um mundo de aplica\xe7\xf5es distribu\xeddas, APIs t\xeam papel chave. Conectando sistemas para alavancar neg\xf3cios e elevar a experi\xeancia do desenvolvedor para outro n\xedvel. Dado o cen\xe1rio atual, temos cada vez mais servi\xe7os e consequentemente APIs, e precisamos de governan\xe7a e seguran\xe7a para que possamos garantir a qualidade e integridade das solu\xe7\xf5es que oferecemos. Por isso, fazer com que nossas APIs sejam observ\xe1veis \xe9 essencial para que elas cumpram seu prop\xf3sito principal, que \xe9 ser utilizada.",date:"2024-07-20T00:00:00.000Z",tags:[{inline:!0,label:"APIs",permalink:"/blog/tags/ap-is"},{inline:!0,label:"observabilidade",permalink:"/blog/tags/observabilidade"},{inline:!0,label:"monitoramento",permalink:"/blog/tags/monitoramento"},{inline:!0,label:"MELT",permalink:"/blog/tags/melt"},{inline:!0,label:"RED",permalink:"/blog/tags/red"},{inline:!0,label:"RUM",permalink:"/blog/tags/rum"}],readingTime:7.405,hasTruncateMarker:!1,authors:[{name:"Dan",title:"Integration Architect",url:"https://github.com/it0dan",imageURL:"https://github.com/it0dan.png",key:"it0dan"}],frontMatter:{slug:"observabilidade-de-apis",title:"Observabilidade de APIs",authors:["it0dan"],tags:["APIs","observabilidade","monitoramento","MELT","RED","RUM"]},unlisted:!1,prevItem:{title:"Ciclo de Vida das APIs",permalink:"/blog/ciclo-de-vida-das-apis"},nextItem:{title:"T\xedtulo do exemplo",permalink:"/blog/template-example"}},t={authorsImageUrls:[void 0]},m=[{value:"Defini\xe7\xe3o moderna de APIs",id:"defini\xe7\xe3o-moderna-de-apis",level:2},{value:"Monitoramento &amp; Observabilidade",id:"monitoramento--observabilidade",level:2},{value:"MELT",id:"melt",level:2},{value:"Golden Signals",id:"golden-signals",level:2},{value:"RED framework",id:"red-framework",level:2},{value:"RUM framework",id:"rum-framework",level:2},{value:"Considera\xe7\xf5es finais",id:"considera\xe7\xf5es-finais",level:2}];function l(e){const a={h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.p,{children:"Em um mundo de aplica\xe7\xf5es distribu\xeddas, APIs t\xeam papel chave. Conectando sistemas para alavancar neg\xf3cios e elevar a experi\xeancia do desenvolvedor para outro n\xedvel. Dado o cen\xe1rio atual, temos cada vez mais servi\xe7os e consequentemente APIs, e precisamos de governan\xe7a e seguran\xe7a para que possamos garantir a qualidade e integridade das solu\xe7\xf5es que oferecemos. Por isso, fazer com que nossas APIs sejam observ\xe1veis \xe9 essencial para que elas cumpram seu prop\xf3sito principal, que \xe9 ser utilizada."}),"\n",(0,s.jsx)(a.p,{children:"Nesse conte\xfado aprofundaremos no conceito de observabilidade no contexto de APIs. O que \xe9 essencial observarmos e boas pr\xe1ticas utilizadas para que atrav\xe9s dos dados de telemetria das APIs consigamos trabalhar de forma preditiva, evitando impacto no relacionamento com seu ecossistema de parceiros e clientes."}),"\n",(0,s.jsx)(a.h2,{id:"defini\xe7\xe3o-moderna-de-apis",children:"Defini\xe7\xe3o moderna de APIs"}),"\n",(0,s.jsx)(a.p,{children:"API \xe9 acr\xf4nimo de Application Programming Interface e significa interface program\xe1vel da aplica\xe7\xe3o. Permite que diferentes sistemas consigam integrar entre si sem que eles precisem expor suas regras e l\xf3gicas de neg\xf3cio. Isso tudo atrav\xe9s de um contrato (swagger) utilizando a Especifica\xe7\xe3o OpenAPI. Dado o cen\xe1rio atual do mercado, onde cada vez mais empresas vem se tornando empresas de tecnologia, migrando suas estrat\xe9gias de neg\xf3cio para o digital e modernizando sua arquitetura para o contexto de eventos e microsservi\xe7os, as APIs t\xeam papel fundamental pois elas habilitam a comunica\xe7\xe3o por todo esse ecossistema distribu\xeddo. Com isso, APIs n\xe3o s\xe3o apenas ativos t\xe9cnicos da organiza\xe7\xe3o, e sim ativos de neg\xf3cio, onde a estrat\xe9gia de APIs deve estar alinhada com a estrat\xe9gia de neg\xf3cios para que empresas consigam sobreviver a esse campo de batalha digital."}),"\n",(0,s.jsx)(a.h2,{id:"monitoramento--observabilidade",children:"Monitoramento & Observabilidade"}),"\n",(0,s.jsx)(a.p,{children:"\xc9 importante definir e diferenciar monitoramento de observabilidade, por vezes ocorre confus\xe3o na compreens\xe3o desses conceitos que parecem a mesma coisa mas n\xe3o s\xe3o."}),"\n",(0,s.jsx)(a.p,{children:"Monitoramento \xe9 a a\xe7\xe3o de coletar, processar, analisar, agregar e disponibilizar dados sobre os sistemas em tempo real. E com isso nos auxiliar na detec\xe7\xe3o de um problema de forma \xe1gil."}),"\n",(0,s.jsx)(a.p,{children:"Observabilidade \xe9 definido como um mecanismo focado em coletar dados de telemetria para entender o que causou ou est\xe1 causando problema na nossa aplica\xe7\xe3o. Ent\xe3o diferente do monitoramento que auxilia na an\xe1lise e detec\xe7\xe3o de um problema, a observabilidade deve ter a capacidade de explicar o porqu\xea daquele comportamento."}),"\n",(0,s.jsx)(a.p,{children:"Dito isso, podemos entender que esses dois conceitos aplicados em arquitetura moderna e distribu\xedda s\xe3o simbi\xf3ticos. Monitorar nossas APIs \xe9 essencial para que possamos trazer observabilidade e com isso investigar e resolver problemas da forma mais r\xe1pida poss\xedvel, gerando o m\xednimo de impacto nos consumidores dessas APIs."}),"\n",(0,s.jsx)(a.h2,{id:"melt",children:"MELT"}),"\n",(0,s.jsx)(a.p,{children:"MELT \xe9 um acr\xf4nimo para m\xe9tricas, eventos, logs e traces. S\xe3o considerados tipos de dados de telemetria essenciais para observabilidade."}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"M\xe9tricas"})," s\xe3o medidas num\xe9ricas coletadas durante o tempo. Como por exemplo o total de requisi\xe7\xf5es ou taxa de erro de um per\xedodo."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"Eventos"})," s\xe3o a\xe7\xf5es que aconteceram ou est\xe3o acontecendo em um determinado intervalo de tempo. Por exemplo, quando um pedido \xe9 realizado por um cliente, ou o reabastecimento de produtos por um parceiro ou mesmo um ataque DDoS que a API est\xe1 sofrendo."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"Logs"})," s\xe3o linhas de texto que sistemas produzem quando determinados blocos de c\xf3digo s\xe3o executados. No contexto das APIs, quando requisi\xe7\xf5es s\xe3o realizadas. Dessa forma s\xe3o salvos dados como quando foi feita a requisi\xe7\xe3o, qual a API, URI, recurso, opera\xe7\xe3o, m\xe9todo e etc."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"Traces"})," s\xe3o intera\xe7\xf5es entre componentes que aconteceram durante a requisi\xe7\xe3o e a resposta. \xc9 o passo-a-passo de todo fluxo de chamada de uma API. Como por exemplo por quais sistemas ela percorreu, quais as manipula\xe7\xf5es e valida\xe7\xf5es foram realizadas bem como a origem, para onde foi encaminhada e quanto tempo gastou em cada a\xe7\xe3o."]}),"\n"]}),"\n",(0,s.jsx)(a.p,{children:"Se tratando de APIs, \xe9 primordial trazermos dados de telemetria de m\xe9tricas, eventos, logs e trace para que possamos ser mais assertivos na detec\xe7\xe3o dos sintomas e encontrar a causa raiz de algo que pode estar acontecendo e impactando os consumidores."}),"\n",(0,s.jsx)(a.h2,{id:"golden-signals",children:"Golden Signals"}),"\n",(0,s.jsx)(a.p,{children:"Agora que sabemos os tipos de dados de telemetria que devemos observar, precisamos entender quais s\xe3o os sinais que ser\xe3o gerados a partir desses dados que v\xe3o nos indicar quando o comportamento das nossas APIs est\xe1 anormal."}),"\n",(0,s.jsx)(a.p,{children:'O termo "sinais dourados" vem do livro Google SRE e representam quatro sinais essenciais que devem ser monitorados. A recomenda\xe7\xe3o \xe9 que se voc\xea pode monitorar apenas quatro sinais, que sejam eles.'}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"Lat\xeancia"})," - Tempo total da realiza\xe7\xe3o de uma chamada. Ela pode ser subdividida na lat\xeancia do servi\xe7o A, lat\xeancia do servi\xe7o B, lat\xeancia de rede, lat\xeancia do gateway e etc."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"Tr\xe1fego"})," - Medida que determina a quantidade de atividades que a aplica\xe7\xe3o est\xe1 recebendo. No contexto das APIs geralmente s\xe3o a quantidade de requisi\xe7\xf5es por segundo (RPS) ou a quantidade de requisi\xe7\xf5es por minuto (RPM)."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"Erro"})," - Taxa de requisi\xe7\xf5es que falharam de forma expl\xedcita, como erros de servidor ou de cliente representados atrav\xe9s do status code. Ou de forma impl\xedcita, quando o status code de retorno \xe9 de sucesso mas no payload do response consta mensagem de erro."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"Satura\xe7\xe3o"})," - Medida do qu\xe3o cheio um servi\xe7o est\xe1. Podemos medi-la atrav\xe9s da porcentagem de utiliza\xe7\xe3o de CPU, mem\xf3ria, largura da banda de rede e etc."]}),"\n"]}),"\n",(0,s.jsx)(a.p,{children:"Com esses sinais dourados devemos ser capazes de identificar a causa ra\xedz de qualquer problema com os nossos servi\xe7os. Inclusive um pode ser indicativo ou consequ\xeancia do outro. Por exemplo, seu servi\xe7o tem aumento significativo no tr\xe1fego (RPS acima da m\xe9dia), com isso ele come\xe7a a saturar e consequentemente aumentar sua lat\xeancia, ocasionando erros de timeout."}),"\n",(0,s.jsx)(a.h2,{id:"red-framework",children:"RED framework"}),"\n",(0,s.jsx)(a.p,{children:"RED \xe9 um framework derivado dos 4 sinais dourados e nos dias atuais \xe9 o mais utilizado se tratando do monitoramento de microsservi\xe7os. Criado por Tom Wilkie, esse framework vem em contrapartida a utiliza\xe7\xe3o do framework USE, que \xe9 amplamente utilizado, mas com forte contexto de infraestrutura. Esse artigo explora toda a problem\xe1tica do USE e como ele n\xe3o se encaixa totalmente no monitoramento de servi\xe7os distribu\xeddos. RED \xe9 baseado em 3 sinais:"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"Rate"})," - Quantidade de requisi\xe7\xf5es por segundo ou minuto."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"Error"})," - Quantidade de requisi\xe7\xf5es falhas."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"Duration"})," - Tempo de processamento de uma chamada."]}),"\n"]}),"\n",(0,s.jsx)(a.p,{children:"Totalmente aplic\xe1vel ao contexto de APIs, esses s\xe3o geralmente os sinais que mensuramos para monitorar e garantir que nossas APIs est\xe3o altamente dispon\xedveis e saud\xe1veis. E com eles podemos destrinchar an\xe1lises secund\xe1rias que nos dar\xe3o diversos insights de neg\xf3cio. Como por exemplo a quantidade de requisi\xe7\xf5es por APIs, por aplica\xe7\xf5es, por IPs e etc. E a mesma l\xf3gica pode ser aplicada na quantidade de requisi\xe7\xf5es falhas, onde poder\xedamos facilmente identificar que os erros est\xe3o vindo de uma aplica\xe7\xe3o que est\xe1 com token expirado e est\xe1 recebendo status code 401 entrando em um loop e aumentando nossa taxa de requisi\xe7\xf5es falhas. Ou, analisando o aumento na dura\xe7\xe3o das chamadas podemos correlacionar com a quantidade de requisi\xe7\xf5es e entender que podemos estar sofrendo essa sobrecarga justamente pela quantidade de requisi\xe7\xf5es acima da m\xe9dia em um dado per\xedodo."}),"\n",(0,s.jsx)(a.p,{children:"Para monitoramento de APIs, assim como para microsservi\xe7os, o framework RED \xe9 atualmente o mais utilizado. Com ele, conseguimos de forma simplificada monitorar dados essenciais das nossas APIs e consequentemente de forma simplificada identificar sintomas e a causa ra\xedz do que est\xe1 causando indisponibilidade ou intermit\xeancia no fluxo das integra\xe7\xf5es."}),"\n",(0,s.jsx)(a.h2,{id:"rum-framework",children:"RUM framework"}),"\n",(0,s.jsx)(a.p,{children:"Real User Monitoring \xe9 uma t\xe9cnica de monitoramento passiva que vem ganhando muita express\xe3o no mundo de DevOps. Diferente daquele modelo tradicional de monitoramento white-box, mais voltado para o comportamento interno das nossas aplica\xe7\xf5es, o monitoramento black-box vem sendo cada vez mais presente e necess\xe1rio no mundo das opera\xe7\xf5es. Esse tipo de monitoramento foca em monitorar o que o usu\xe1rio vai enxergar, como por exemplos de qual aplica\xe7\xe3o foi realizado o acesso, por onde ele est\xe1 acessando (geolocaliza\xe7\xe3o), o tipo de conectividade (3G, 4G\u2026), jornada de compra e etc. Dado o contexto atual de mercado, onde cada vez mais clientes t\xeam o poder de escolha, precisamos nos manter competitivos e para isso temos que entender a experi\xeancia que os usu\xe1rios est\xe3o tendo com o que n\xf3s oferecemos para eles."}),"\n",(0,s.jsx)(a.h2,{id:"considera\xe7\xf5es-finais",children:"Considera\xe7\xf5es finais"}),"\n",(0,s.jsx)(a.p,{children:"N\xe3o posso te dizer o que sua organiza\xe7\xe3o deve monitorar, s\xe3o muitas vari\xe1veis e contextos diferentes. Mas entendendo os conceitos apresentados neste conte\xfado voc\xea conseguir\xe1 elevar o monitoramento das suas APIs para outro n\xedvel, trazendo observabilidade e conseguindo reagir a problemas mesmo antes que aconte\xe7am, gerando o m\xednimo de impacto poss\xedvel para os consumidores."}),"\n",(0,s.jsx)(a.p,{children:"Em um mundo cada vez mais distribu\xeddo, os casos de uso e contextos de neg\xf3cio formam uma infinidade de possibilidades, com isso \xe9 de extrema import\xe2ncia entender esses conceitos fundamentais para conseguir adequ\xe1-los \xe0 sua l\xf3gica de neg\xf3cio. Monitorar os dados certos s\xf3 ser\xe1 poss\xedvel se suas APIs forem observ\xe1veis. Para continuar competitivo no mercado atual precisamos olhar al\xe9m de m\xe9tricas internas, precisamos analisar m\xe9tricas externas, para garantir a melhor experi\xeancia n\xe3o s\xf3 para as aplica\xe7\xf5es que est\xe3o consumindo as APIs, mas tamb\xe9m para o usu\xe1rio final."}),"\n",(0,s.jsx)(a.p,{children:"Obrigado por ter lido at\xe9 aqui, at\xe9 a pr\xf3xima!"})]})}function c(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,a,o)=>{o.d(a,{R:()=>n,x:()=>d});var s=o(6540);const i={},r=s.createContext(i);function n(e){const a=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function d(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:n(e.components),s.createElement(r.Provider,{value:a},e.children)}}}]);